
> nonlinear-editor@0.1.0 test
> jest

FAIL __tests__/api/video/generate.test.ts
  ● POST /api/video/generate › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:115:21)

  ● POST /api/video/generate › Rate Limiting › should return 429 when rate limit exceeded

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:140:21)

  ● POST /api/video/generate › Rate Limiting › should apply expensive rate limit for video generation

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:162:21)

  ● POST /api/video/generate › Input Validation › should return 400 when validation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:189:21)

  ● POST /api/video/generate › Input Validation › should validate all required fields

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:211:21)

  ● POST /api/video/generate › Project Ownership Verification › should return 404 when project not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:238:21)

  ● POST /api/video/generate › Project Ownership Verification › should return 403 when user does not own project

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:260:21)

  ● POST /api/video/generate › Video Generation - Google Veo › should generate video with Veo for Google models

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:283:21)

  ● POST /api/video/generate › Video Generation - Google Veo › should pass all Veo parameters correctly

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:318:21)

  ● POST /api/video/generate › Video Generation - FAL Models › should use FAL for Seedance model

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:367:21)

  ● POST /api/video/generate › Video Generation - FAL Models › should use FAL for MiniMax model

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:395:21)

  ● POST /api/video/generate › Image-to-Video Generation › should generate video from image asset

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:439:21)

  ● POST /api/video/generate › Image-to-Video Generation › should return 404 when image asset not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:476:21)

  ● POST /api/video/generate › Error Handling › should return 500 when video generation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:500:21)

  ● POST /api/video/generate › Error Handling › should handle malformed JSON body

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:519:21)

  ● POST /api/video/generate › Response Format › should return operationName and status

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:539:21)

FAIL __tests__/api/assets/sign.test.ts
  ● GET /api/assets/sign › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:54:21)

  ● GET /api/assets/sign › Input Validation › should return 400 when neither storageUrl nor assetId provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:69:21)

  ● GET /api/assets/sign › Input Validation › should return 400 when storageUrl is invalid

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:80:21)

  ● GET /api/assets/sign › Input Validation › should accept valid supabase:// storage URLs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:91:21)

  ● GET /api/assets/sign › Asset Lookup by assetId › should fetch storageUrl from database when assetId provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:115:21)

  ● GET /api/assets/sign › Asset Lookup by assetId › should return 404 when asset not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:131:21)

  ● GET /api/assets/sign › Asset Lookup by assetId › should return 403 when asset belongs to different user

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:152:21)

  ● GET /api/assets/sign › Asset Authorization by storageUrl › should verify user owns asset by checking folder structure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:165:21)

  ● GET /api/assets/sign › Asset Authorization by storageUrl › should return 403 when storageUrl does not match user

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:176:21)

  ● GET /api/assets/sign › Asset Authorization by storageUrl › should skip folder check when assetId was used for lookup

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:200:21)

  ● GET /api/assets/sign › Signed URL Generation › should create signed URL with default TTL

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:211:21)

  ● GET /api/assets/sign › Signed URL Generation › should create signed URL with custom TTL

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:226:21)

  ● GET /api/assets/sign › Signed URL Generation › should parse storage URL correctly

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:238:21)

  ● GET /api/assets/sign › Signed URL Generation › should return signed URL and expiration

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:258:21)

  ● GET /api/assets/sign › Storage Bucket Handling › should handle different storage buckets

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:283:21)

  ● GET /api/assets/sign › Storage Bucket Handling › should handle paths with multiple slashes

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:292:21)

  ● GET /api/assets/sign › Error Handling › should return 500 when storage signing fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:313:21)

  ● GET /api/assets/sign › Error Handling › should return 500 when database query fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:331:21)

  ● GET /api/assets/sign › Error Handling › should handle unexpected errors gracefully

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:344:21)

  ● GET /api/assets/sign › URL Format Handling › should strip supabase:// protocol

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:359:21)

  ● GET /api/assets/sign › URL Format Handling › should handle URLs with special characters

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:375:21)

  ● GET /api/assets/sign › URL Format Handling › should validate bucket name is not empty

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:386:21)

  ● GET /api/assets/sign › URL Format Handling › should validate path is not empty

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:399:21)

FAIL __tests__/api/payments/checkout.test.ts
  ● POST /api/stripe/checkout › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:64:21)

  ● POST /api/stripe/checkout › Authentication › should return 401 when auth error occurs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:81:21)

  ● POST /api/stripe/checkout › User Profile Validation › should return 500 when user profile not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:97:21)

  ● POST /api/stripe/checkout › User Profile Validation › should return 400 when user already has active subscription

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:118:21)

  ● POST /api/stripe/checkout › User Profile Validation › should allow checkout for free tier users

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:143:21)

  ● POST /api/stripe/checkout › User Profile Validation › should allow checkout for users with canceled subscriptions

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:166:21)

  ● POST /api/stripe/checkout › Stripe Customer Creation › should create new Stripe customer when not exists

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:196:21)

  ● POST /api/stripe/checkout › Stripe Customer Creation › should use existing Stripe customer when available

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:227:21)

  ● POST /api/stripe/checkout › Checkout Session Creation › should create checkout session with default price

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:257:21)

  ● POST /api/stripe/checkout › Checkout Session Creation › should create checkout session with custom price

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:290:21)

  ● POST /api/stripe/checkout › Checkout Session Creation › should return 500 when price ID not configured

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:317:21)

  ● POST /api/stripe/checkout › Error Handling › should return 500 when Stripe API fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:343:21)

  ● POST /api/stripe/checkout › Error Handling › should handle malformed JSON body

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:360:21)

  ● POST /api/stripe/checkout › Response Format › should return sessionId and url

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:388:21)

  ● POST /api/stripe/checkout › URL Configuration › should use NEXT_PUBLIC_BASE_URL when available

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:416:21)

  ● POST /api/stripe/checkout › URL Configuration › should fallback to request origin when BASE_URL not set

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:445:21)

FAIL __tests__/lib/api/response.test.ts
  ● API Response Utilities › withErrorHandling › should log errors to console

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Handler error:", Any<Error>

    Number of calls: 0

      378 |       await wrappedHandler();
      379 |
    > 380 |       expect(consoleSpy).toHaveBeenCalledWith('Handler error:', expect.any(Error));
          |                          ^
      381 |       consoleSpy.mockRestore();
      382 |     });
      383 |   });

      at Object.toHaveBeenCalledWith (__tests__/lib/api/response.test.ts:380:26)

FAIL __tests__/api/assets/upload.test.ts
  ● POST /api/assets/upload › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:68:21)

  ● POST /api/assets/upload › Input Validation › should return 400 when no file provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:88:21)

  ● POST /api/assets/upload › Input Validation › should return 400 when no projectId provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:106:21)

  ● POST /api/assets/upload › Input Validation › should return 400 when file exceeds size limit

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:135:21)

  ● POST /api/assets/upload › Input Validation › should return 400 for invalid image MIME type

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:157:21)

  ● POST /api/assets/upload › Input Validation › should accept valid image MIME types

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:189:23)

  ● POST /api/assets/upload › Input Validation › should accept valid video MIME types

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:220:23)

  ● POST /api/assets/upload › Project Authorization › should return 404 when project not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:246:21)

  ● POST /api/assets/upload › Project Authorization › should return 404 when user does not own project

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:275:21)

  ● POST /api/assets/upload › Project Authorization › should verify project ownership with user_id

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:302:21)

  ● POST /api/assets/upload › File Upload Success › should upload file and create asset record

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:332:21)

  ● POST /api/assets/upload › File Upload Success › should generate unique filename with UUID

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:369:21)

  ● POST /api/assets/upload › File Upload Success › should organize files in correct folder structure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:401:21)

  ● POST /api/assets/upload › File Upload Success › should return asset information in response

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:432:21)

  ● POST /api/assets/upload › Error Handling › should return 500 when storage upload fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:463:21)

  ● POST /api/assets/upload › Error Handling › should delete uploaded file when database insert fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:498:21)

  ● POST /api/assets/upload › Error Handling › should handle unexpected errors

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:525:21)

  ● POST /api/assets/upload › Activity History › should log upload to activity history

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:556:21)

{"level":50,"time":1761264461916,"env":"test","service":"genai-video-production","error":{"type":"Error","message":"Test error","stack":"Error: Test error\n    at handler (/Users/davidchen/Projects/non-linear-editor/__tests__/lib/api/response.test.ts:336:15)\n    at handler (/Users/davidchen/Projects/non-linear-editor/lib/api/response.ts:272:20)\n    at Object.wrappedHandler (/Users/davidchen/Projects/non-linear-editor/__tests__/lib/api/response.test.ts:340:30)\n    at Promise.finally.completed (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)\n    at _callCircusTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:947:3)\n    at /Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:857:11)\n    at run (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)\n    at jestAdapter (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:497:12)"},"msg":"Handler error"}
{"level":50,"time":1761264461931,"env":"test","service":"genai-video-production","error":"String error","msg":"Handler error"}
{"level":50,"time":1761264461931,"env":"test","service":"genai-video-production","error":{"type":"Error","message":"Test error","stack":"Error: Test error\n    at handler (/Users/davidchen/Projects/non-linear-editor/__tests__/lib/api/response.test.ts:374:15)\n    at handler (/Users/davidchen/Projects/non-linear-editor/lib/api/response.ts:272:20)\n    at Object.wrappedHandler (/Users/davidchen/Projects/non-linear-editor/__tests__/lib/api/response.test.ts:378:13)\n    at Promise.finally.completed (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)\n    at _callCircusTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:947:3)\n    at /Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:857:11)\n    at run (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)\n    at jestAdapter (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:497:12)"},"msg":"Handler error"}
FAIL __tests__/api/projects/create.test.ts
  ● POST /api/projects › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:71:21)

  ● POST /api/projects › Authentication › should return 401 when auth error occurs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:88:21)

  ● POST /api/projects › Success Cases › should create a project with custom title

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:108:21)

  ● POST /api/projects › Success Cases › should create a project with default title when no title provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:135:21)

  ● POST /api/projects › Success Cases › should create a project with empty timeline state

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:157:21)

  ● POST /api/projects › Error Handling › should return 500 when database insert fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:175:21)

  ● POST /api/projects › Error Handling › should return 500 when unexpected error occurs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:193:21)

  ● POST /api/projects › Error Handling › should handle malformed JSON body

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:208:21)

  ● POST /api/projects › Data Validation › should accept empty title and use default

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:228:21)

  ● POST /api/projects › Data Validation › should trim whitespace from title

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:251:21)

  ● POST /api/projects › Data Validation › should accept very long titles

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:270:21)

  ● POST /api/projects › Response Format › should return complete project object

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:292:21)

  ● POST /api/projects › Response Format › should return correct content-type header

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:313:21)

  ● POST /api/projects › Database Interactions › should call database methods in correct order

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:330:21)

  ● POST /api/projects › Database Interactions › should use select().single() chain

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:348:21)

FAIL __tests__/api/video/status.test.ts
  ● GET /api/video/status › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:91:21)

  ● GET /api/video/status › Input Validation › should return 400 when operationName is missing

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:104:21)

  ● GET /api/video/status › Input Validation › should return 400 when projectId is missing

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:115:21)

  ● GET /api/video/status › FAL Video Status › should check FAL operation status

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:134:21)

  ● GET /api/video/status › FAL Video Status › should handle completed FAL video generation

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:178:21)

  ● GET /api/video/status › FAL Video Status › should return error when FAL video generation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:200:21)

  ● GET /api/video/status › FAL Video Status › should validate FAL operation name format

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:215:21)

  ● GET /api/video/status › Veo Video Status › should check Veo operation status

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:234:21)

  ● GET /api/video/status › Veo Video Status › should handle completed Veo video with base64 data

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:275:21)

  ● GET /api/video/status › Veo Video Status › should download Veo video from GCS URI

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:331:21)

  ● GET /api/video/status › Veo Video Status › should return error when Veo operation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:354:21)

  ● GET /api/video/status › Storage and Database › should upload video to storage and create asset record

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:392:21)

  ● GET /api/video/status › Storage and Database › should clean up storage on database insert failure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:445:21)

  ● GET /api/video/status › Storage and Database › should create activity history entry on success

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:479:21)

  ● GET /api/video/status › Error Handling › should return 500 when status check fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:501:21)

  ● GET /api/video/status › Error Handling › should handle storage upload failure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:533:21)

PASS __tests__/components/ErrorBoundary.test.tsx
PASS __tests__/components/EditorHeader.test.tsx
  ● Console

    console.error
      An update to EditorHeader inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setProjects (components/EditorHeader.tsx:41:9)

    console.error
      An update to EditorHeader inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentProject (components/EditorHeader.tsx:43:9)

    console.error
      An update to EditorHeader inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setProjects (components/EditorHeader.tsx:41:9)

    console.error
      An update to EditorHeader inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentProject (components/EditorHeader.tsx:43:9)

    console.error
      [ERROR] Failed to rename project {
        error: {
          name: 'Error',
          message: 'Update failed',
          stack: 'Error: Update failed\n' +
            '    at Object.<anonymous> (/Users/davidchen/Projects/non-linear-editor/__tests__/components/EditorHeader.test.tsx:277:48)\n' +
            '    at Promise.finally.completed (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)\n' +
            '    at new Promise (<anonymous>)\n' +
            '    at callAsyncCircusFn (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)\n' +
            '    at _callCircusTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)\n' +
            '    at _runTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:947:3)\n' +
            '    at /Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:849:7\n' +
            '    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:862:11)\n' +
            '    at _runTestsForDescribeBlock (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:857:11)\n' +
            '    at run (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:761:3)\n' +
            '    at runAndTransformResultsToJestFormat (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)\n' +
            '    at jestAdapter (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-circus/build/runner.js:101:19)\n' +
            '    at runTestInternal (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:275:16)\n' +
            '    at runTest (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:343:7)\n' +
            '    at Object.worker (/Users/davidchen/Projects/non-linear-editor/node_modules/jest-runner/build/testWorker.js:497:12)'
        },
        projectId: 'project-1'
      }

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at BrowserLogger.log (lib/browserLogger.ts:145:29)
      at BrowserLogger.log [as error] (lib/browserLogger.ts:243:10)
      at error (components/EditorHeader.tsx:81:21)

PASS __tests__/services/projectService.test.ts
PASS __tests__/lib/hooks/useDebounce.test.ts
PASS __tests__/components/LoadingSpinner.test.tsx
PASS __tests__/lib/hooks/usePolling.test.ts
PASS __tests__/components/editor/AssetPanel.test.tsx
FAIL __tests__/components/generation/VideoQueueItem.test.tsx
  ● Console

    console.error
      An update to VideoQueueItem inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setVideoLoading (components/generation/VideoQueueItem.tsx:74:17)

    console.error
      An update to VideoQueueItem inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setVideoError (components/generation/VideoQueueItem.tsx:75:17)

  ● VideoQueueItem › Completed State › should show error state on video error

    TestingLibraryElementError: Unable to find an element with the text: Failed to load video. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"group relative flex flex-col rounded-lg border border-neutral-200 bg-white shadow-sm overflow-hidden"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"relative aspect-video bg-neutral-100"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"absolute inset-0 flex items-center justify-center bg-neutral-100 z-10"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-center"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mx-auto h-8 w-8 animate-spin rounded-full border-4 border-neutral-300 border-t-blue-600"[39m
                [36m/>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-xs text-neutral-600"[39m
                [36m>[39m
                  [0mLoading video...[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<video[39m
              [33mclass[39m=[32m"h-full w-full object-contain bg-black"[39m
              [33mcontrols[39m=[32m""[39m
              [33mplaysinline[39m=[32m""[39m
              [33mposter[39m=[32m"https://example.com/thumb.jpg"[39m
              [33mpreload[39m=[32m"auto"[39m
              [33msrc[39m=[32m"https://example.com/video.mp4"[39m
            [36m>[39m
              [36m<track[39m
                [33mkind[39m=[32m"captions"[39m
              [36m/>[39m
              [0mYour browser does not support the video tag.[0m
            [36m</video>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"p-3"[39m
          [36m>[39m
            [36m<p[39m
              [33mclass[39m=[32m"text-xs text-neutral-700 line-clamp-2 mb-2"[39m
            [36m>[39m
              [0mA beautiful sunset over the ocean[0m
            [36m</p>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium bg-green-100 text-green-700"[39m
              [36m>[39m
                [0mCompleted[0m
              [36m</span>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"absolute right-2 top-2 z-10 rounded-md bg-black/50 p-1.5 text-white opacity-0 transition-opacity hover:bg-black/70 group-hover:opacity-100"[39m
            [33mtitle[39m=[32m"Remove from queue"[39m
          [36m>[39m
            [36m<svg[39m
              [33mclass[39m=[32m"h-4 w-4"[39m
              [33mfill[39m=[32m"none"[39m
              [33mstroke[39m=[32m"currentColor"[39m
              [33mviewBox[39m=[32m"0 0 24 24"[39m
            [36m>[39m
              [36m<path[39m
                [33md[39m=[32m"M6 18L18 6M6 6l12 12"[39m
                [33mstroke-linecap[39m=[32m"round"[39m
                [33mstroke-linejoin[39m=[32m"round"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
            [36m</svg>[39m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      173 |       fireEvent.error(video!);
      174 |
    > 175 |       expect(screen.getByText('Failed to load video')).toBeInTheDocument();
          |                     ^
      176 |     });
      177 |
      178 |     it('should report video load errors with browserLogger', async () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (__tests__/components/generation/VideoQueueItem.test.tsx:175:21)

  ● VideoQueueItem › Edge Cases › should handle empty prompt

    TestingLibraryElementError: Found multiple elements with the text: Queued

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<p[39m
      [33mclass[39m=[32m"mt-2 text-xs text-neutral-600"[39m
    [36m>[39m
      [0mQueued[0m
    [36m</p>[39m

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mclass[39m=[32m"inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium bg-neutral-100 text-neutral-700"[39m
    [36m>[39m
      [0mQueued[0m
    [36m</span>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"group relative flex flex-col rounded-lg border border-neutral-200 bg-white shadow-sm overflow-hidden"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"relative aspect-video bg-neutral-100"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex h-full w-full items-center justify-center"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-center"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mx-auto h-8 w-8 rounded-full border-4 border-neutral-300 border-t-neutral-600"[39m
                [36m/>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-xs text-neutral-600"[39m
                [36m>[39m
                  [0mQueued[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"p-3"[39m
          [36m>[39m
            [36m<p[39m
              [33mclass[39m=[32m"text-xs text-neutral-700 line-clamp-2 mb-2"[39m
            [36m/>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium bg-neutral-100 text-neutral-700"[39m
              [36m>[39m
                [0mQueued[0m
              [36m</span>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"absolute right-2 top-2 z-10 rounded-md bg-black/50 p-1.5 text-white opacity-0 transition-opacity hover:bg-black/70 group-hover:opacity-100"[39m
            [33mtitle[39m=[32m"Remove from queue"[39m
          [36m>[39m
            [36m<svg[39m
              [33mclass[39m=[32m"h-4 w-4"[39m
              [33mfill[39m=[32m"none"[39m
              [33mstroke[39m=[32m"currentColor"[39m
              [33mviewBox[39m=[32m"0 0 24 24"[39m
            [36m>[39m
              [36m<path[39m
                [33md[39m=[32m"M6 18L18 6M6 6l12 12"[39m
                [33mstroke-linecap[39m=[32m"round"[39m
                [33mstroke-linejoin[39m=[32m"round"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
            [36m</svg>[39m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      323 |     it('should handle empty prompt', () => {
      324 |       render(<VideoQueueItem {...baseProps} prompt="" status="queued" />);
    > 325 |       expect(screen.getByText('Queued')).toBeInTheDocument();
          |                     ^
      326 |     });
      327 |
      328 |     it('should handle very long error messages', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (__tests__/components/generation/VideoQueueItem.test.tsx:325:21)

PASS __tests__/lib/utils/arrayUtils.test.ts
PASS __tests__/components/CreateProjectButton.test.tsx
PASS __tests__/lib/rateLimit.test.ts
{"level":30,"time":1761264462204,"env":"test","service":"genai-video-production","event":"cache.initialized","type":"lru","maxSize":1000,"msg":"Cache initialized with LRU strategy (max 1000 entries)"}
{"level":30,"time":1761264462204,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462227,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462241,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462242,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462248,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":1,"msg":"Cache cleared: 1 entries removed"}
{"level":30,"time":1761264462250,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":1,"msg":"Cache cleared: 1 entries removed"}
{"level":30,"time":1761264462250,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462251,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":1,"msg":"Cache cleared: 1 entries removed"}
{"level":30,"time":1761264462252,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462253,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462254,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462255,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462255,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462256,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462257,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462257,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
{"level":30,"time":1761264462264,"env":"test","service":"genai-video-production","event":"cache.cleared","entriesCleared":0,"msg":"Cache cleared: 0 entries removed"}
PASS __tests__/lib/api/validation.test.ts
PASS __tests__/lib/password-validation.test.ts
PASS __tests__/lib/fetchWithTimeout.test.ts
PASS __tests__/lib/errorTracking.test.ts
PASS __tests__/lib/validation.test.ts
FAIL __tests__/api/payments/webhook.test.ts
  ● Test suite failed to run

    ReferenceError: Cannot access 'stripeMocks' before initialization

      19 |
      20 | jest.mock('@/lib/stripe', () => {
    > 21 |   stripeMocks.constructEvent = jest.fn();
         |   ^
      22 |   stripeMocks.retrieveSubscription = jest.fn();
      23 |
      24 |   return {

      at stripeMocks (__tests__/api/payments/webhook.test.ts:21:3)
      at Object.<anonymous> (app/api/stripe/webhook/route.ts:23:17)
      at Object.<anonymous> (__tests__/api/payments/webhook.test.ts:34:16)

FAIL __tests__/components/PreviewPlayer.test.tsx
  ● Test suite failed to run

    TypeError: Cannot destructure property 'MAX_HISTORY' of '_constants.EDITOR_CONSTANTS' as it is undefined.

      27 | import { EDITOR_CONSTANTS, CLIP_CONSTANTS, ZOOM_CONSTANTS } from '@/lib/constants';
      28 |
    > 29 | const { MAX_HISTORY, HISTORY_DEBOUNCE_MS } = EDITOR_CONSTANTS;
         |         ^
      30 | const { MIN_CLIP_DURATION } = CLIP_CONSTANTS;
      31 | const { MIN_ZOOM, MAX_ZOOM, DEFAULT_ZOOM } = ZOOM_CONSTANTS;
      32 |

      at Object.MAX_HISTORY (state/useEditorStore.ts:29:9)
      at Object.<anonymous> (components/PreviewPlayer.tsx:29:25)
      at Object.<anonymous> (__tests__/components/PreviewPlayer.test.tsx:28:63)

FAIL k6/video-generation.test.js
  ● Test suite failed to run

    Cannot find module 'k6/http' from 'k6/video-generation.test.js'

      37 |     http_req_failed: ['rate<0.1'],     // Error rate should be below 10%
      38 |     'rate_limit_hits': ['count<50'],   // Should not hit rate limits too often
    > 39 |   },
         |     ^
      40 | };
      41 |
      42 | // Base URL - override with environment variable

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (k6/video-generation.test.js:39:54)

FAIL __tests__/components/UserMenu.test.tsx
  ● Test suite failed to run

    ReferenceError: Cannot access 'mockToast' before initialization

      43 | jest.mock('react-hot-toast', () => ({
      44 |   __esModule: true,
    > 45 |   default: mockToast,
         |            ^
      46 | }));
      47 |
      48 | // Mock browserLogger

      at mockToast (__tests__/components/UserMenu.test.tsx:45:12)
      at Object.<anonymous> (components/UserMenu.tsx:17:63)
      at Object.<anonymous> (__tests__/components/UserMenu.test.tsx:38:58)

FAIL k6/audio-generation.test.js
  ● Test suite failed to run

    Cannot find module 'k6/http' from 'k6/audio-generation.test.js'

      29 |     http_req_duration: ['p(95)<10000'], // 95% under 10s
      30 |     http_req_failed: ['rate<0.15'],     // Error rate under 15%
    > 31 |   },
         |     ^
      32 | };
      33 |
      34 | const BASE_URL = __ENV.BASE_URL || 'http://localhost:3000';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (k6/audio-generation.test.js:31:54)

FAIL k6/image-generation.test.js
  ● Test suite failed to run

    Cannot find module 'k6/http' from 'k6/image-generation.test.js'

      29 |
      30 | const BASE_URL = __ENV.BASE_URL || 'http://localhost:3000';
    > 31 | const TEST_EMAIL = __ENV.TEST_EMAIL || 'david@dreamreal.ai';
         |                                                      ^
      32 | const TEST_PASSWORD = __ENV.TEST_PASSWORD || 'sc3p4sses';
      33 |
      34 | export function setup() {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (k6/image-generation.test.js:31:54)

FAIL __tests__/components/HorizontalTimeline.test.tsx
  ● Test suite failed to run

    TypeError: Cannot destructure property 'MAX_HISTORY' of '_constants.EDITOR_CONSTANTS' as it is undefined.

      27 | import { EDITOR_CONSTANTS, CLIP_CONSTANTS, ZOOM_CONSTANTS } from '@/lib/constants';
      28 |
    > 29 | const { MAX_HISTORY, HISTORY_DEBOUNCE_MS } = EDITOR_CONSTANTS;
         |         ^
      30 | const { MIN_CLIP_DURATION } = CLIP_CONSTANTS;
      31 | const { MIN_ZOOM, MAX_ZOOM, DEFAULT_ZOOM } = ZOOM_CONSTANTS;
      32 |

      at Object.MAX_HISTORY (state/useEditorStore.ts:29:9)
      at Object.<anonymous> (components/HorizontalTimeline.tsx:15:25)
      at Object.<anonymous> (__tests__/components/HorizontalTimeline.test.tsx:11:68)

FAIL __tests__/components/ActivityHistory.test.tsx
  ● Test suite failed to run

    ReferenceError: Cannot access 'mockToast' before initialization

      22 | jest.mock('react-hot-toast', () => ({
      23 |   __esModule: true,
    > 24 |   default: mockToast,
         |            ^
      25 | }));
      26 |
      27 | // Mock fetch

      at mockToast (__tests__/components/ActivityHistory.test.tsx:24:12)
      at Object.<anonymous> (components/ActivityHistory.tsx:15:63)
      at Object.<anonymous> (__tests__/components/ActivityHistory.test.tsx:19:26)

FAIL __tests__/state/useEditorStore.test.ts
  ● Test suite failed to run

    TypeError: Cannot destructure property 'MAX_HISTORY' of '_constants.EDITOR_CONSTANTS' as it is undefined.

      27 | import { EDITOR_CONSTANTS, CLIP_CONSTANTS, ZOOM_CONSTANTS } from '@/lib/constants';
      28 |
    > 29 | const { MAX_HISTORY, HISTORY_DEBOUNCE_MS } = EDITOR_CONSTANTS;
         |         ^
      30 | const { MIN_CLIP_DURATION } = CLIP_CONSTANTS;
      31 | const { MIN_ZOOM, MAX_ZOOM, DEFAULT_ZOOM } = ZOOM_CONSTANTS;
      32 |

      at Object.MAX_HISTORY (state/useEditorStore.ts:29:9)
      at Object.<anonymous> (__tests__/state/useEditorStore.test.ts:6:25)

PASS __tests__/components/SubscriptionManager.test.tsx
  ● Console

    console.error
      An update to SubscriptionManager inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setProfile (components/SubscriptionManager.tsx:42:9)

    console.error
      An update to SubscriptionManager inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLoading (components/SubscriptionManager.tsx:45:7)

    console.error
      [ERROR] Error upgrading subscription {
        error: {
          name: 'Error',
          message: 'Payment failed',
          stack: 'Error: Payment failed\n' +
            '    at handleUpgrade (/Users/davidchen/Projects/non-linear-editor/components/SubscriptionManager.tsx:64:15)'
        }
      }

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at BrowserLogger.log (lib/browserLogger.ts:145:29)
      at BrowserLogger.log [as error] (lib/browserLogger.ts:243:10)
      at error (components/SubscriptionManager.tsx:72:21)

FAIL __tests__/components/editor/ChatBox.test.tsx
  ● Console

    console.error
      An update to ChatBox inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setMessages (components/editor/ChatBox.tsx:81:9)

    console.error
      An update to ChatBox inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLoadingMessages (components/editor/ChatBox.tsx:86:7)

    console.error
      An update to ChatBox inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setMessages (components/editor/ChatBox.tsx:81:9)

    console.error
      An update to ChatBox inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      91 |       return
      92 |     }
    > 93 |     originalError.call(console, ...args)
         |                   ^
      94 |   }
      95 | })
      96 |

      at console.call [as error] (jest.setup.js:93:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLoadingMessages (components/editor/ChatBox.tsx:86:7)

  ● ChatBox › File Attachments › should create blob URLs when files are attached

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {}

    Number of calls: 0

      407 |       });
      408 |
    > 409 |       expect(mockCreateObjectURL).toHaveBeenCalledWith(testFile);
          |                                   ^
      410 |       await waitFor(() => {
      411 |         expect(screen.getByText('test.png')).toBeInTheDocument();
      412 |       });

      at Object.toHaveBeenCalledWith (__tests__/components/editor/ChatBox.test.tsx:409:35)

  ● ChatBox › Loading States › should show loading indicator when sending message

    Found multiple elements with the text: (content, element)=>{
                        return element?.className.includes('animate-bounce') ?? false;
                    }

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
      [33mstyle[39m=[32m"animation-delay: 0ms;"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
      [33mstyle[39m=[32m"animation-delay: 150ms;"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
      [33mstyle[39m=[32m"animation-delay: 300ms;"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex h-full flex-col border-l border-neutral-200 bg-white"[39m
        [36m>[39m
          [36m<input[39m
            [33maccept[39m=[32m"image/*,.pdf,.doc,.docx,.txt"[39m
            [33mclass[39m=[32m"hidden"[39m
            [33mmultiple[39m=[32m""[39m
            [33mtype[39m=[32m"file"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center justify-between border-b border-neutral-200 px-6 py-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-3"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-blue-500 to-purple-600"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4 text-white"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-sm font-semibold text-neutral-900"[39m
              [36m>[39m
                [0mDreamReal Assistant[0m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-b border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<select[39m
                [33mclass[39m=[32m"flex-1 rounded-lg border border-neutral-300 bg-white px-3 py-2 text-xs font-medium text-neutral-700 focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
              [36m>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-flash-latest"[39m
                [36m>[39m
                  [0mGemini Flash[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-2.5-pro"[39m
                [36m>[39m
                  [0mGemini Pro[0m
                [36m</option>[39m
              [36m</select>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Clear chat history"[39m
                [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50 hover:text-red-600 transition-colors"[39m
                [33mtitle[39m=[32m"Clear chat history"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 overflow-y-auto p-4 space-y-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-end"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-gradient-to-br from-blue-600 to-blue-700 text-white"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mHello, can you help me?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-blue-200"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-start"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-neutral-100 text-neutral-900"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mOf course! How can I assist you today?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-neutral-500"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex justify-start"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"rounded-xl bg-neutral-100 px-4 py-2.5"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center gap-2"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
                    [33mstyle[39m=[32m"animation-delay: 0ms;"[39m
                  [36m/>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
                    [33mstyle[39m=[32m"animation-delay: 150ms;"[39m
                  [36m/>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
                    [33mstyle[39m=[32m"animation-delay: 300ms;"[39m
                  [36m/>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div />[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-t border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-2"[39m
            [36m>[39m
              [36m<textarea[39m
                [33mclass[39m=[32m"flex-1 resize-none rounded-lg border border-neutral-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
                [33mplaceholder[39m=[32m"Ask about your video project..."[39m
                [33mrows[39m=[32m"2"[39m
              [36m/>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col gap-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Send message"[39m
                  [33mclass[39m=[32m"rounded-lg bg-gradient-to-br from-blue-600 to-blue-700 p-2 text-white hover:from-blue-700 hover:to-blue-800 disabled:opacity-50"[39m
                  [33mdisabled[39m=[32m""[39m
                  [33mtitle[39m=[32m"Send message"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M12 19l9 2-9-18-9 18 9-2zm0 0v-8"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Attach files"[39m
                  [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50"[39m
                  [33mtitle[39m=[32m"Attach files"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      519 |
      520 |       // Should show loading dots
    > 521 |       await waitFor(
          |                    ^
      522 |         () => {
      523 |           const loadingDots = screen.getByText(
      524 |             (content, element) => {

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (__tests__/components/editor/ChatBox.test.tsx:521:20)

  ● ChatBox › Error Handling › should display error message when API fails

    Unable to find an element with the text: Sorry, I encountered an error processing your request.. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex h-full flex-col border-l border-neutral-200 bg-white"[39m
        [36m>[39m
          [36m<input[39m
            [33maccept[39m=[32m"image/*,.pdf,.doc,.docx,.txt"[39m
            [33mclass[39m=[32m"hidden"[39m
            [33mmultiple[39m=[32m""[39m
            [33mtype[39m=[32m"file"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center justify-between border-b border-neutral-200 px-6 py-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-3"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-blue-500 to-purple-600"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4 text-white"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-sm font-semibold text-neutral-900"[39m
              [36m>[39m
                [0mDreamReal Assistant[0m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-b border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<select[39m
                [33mclass[39m=[32m"flex-1 rounded-lg border border-neutral-300 bg-white px-3 py-2 text-xs font-medium text-neutral-700 focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
              [36m>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-flash-latest"[39m
                [36m>[39m
                  [0mGemini Flash[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-2.5-pro"[39m
                [36m>[39m
                  [0mGemini Pro[0m
                [36m</option>[39m
              [36m</select>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Clear chat history"[39m
                [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50 hover:text-red-600 transition-colors"[39m
                [33mtitle[39m=[32m"Clear chat history"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 overflow-y-auto p-4 space-y-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-end"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-gradient-to-br from-blue-600 to-blue-700 text-white"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mHello, can you help me?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-blue-200"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-start"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-neutral-100 text-neutral-900"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mOf course! How can I assist you today?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-neutral-500"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div />[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-t border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-2"[39m
            [36m>[39m
              [36m<textarea[39m
                [33mclass[39m=[32m"flex-1 resize-none rounded-lg border border-neutral-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
                [33mplaceholder[39m=[32m"Ask about your video project..."[39m
                [33mrows[39m=[32m"2"[39m
              [36m/>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col gap-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Send message"[39m
                  [33mclass[39m=[32m"rounded-lg bg-gradient-to-br from-blue-600 to-blue-700 p-2 text-white hover:from-blue-700 hover:to-blue-800 disabled:opacity-50"[39m
                  [33mdisabled[39m=[32m""[39m
                  [33mtitle[39m=[32m"Send message"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M12 19l9 2-9-18-9 18 9-2zm0 0v-8"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Attach files"[39m
                  [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50"[39m
                  [33mtitle[39m=[32m"Attach files"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      554 |       await user.click(sendButton);
      555 |
    > 556 |       await waitFor(() => {
          |                    ^
      557 |         expect(
      558 |           screen.getByText('Sorry, I encountered an error processing your request.')
      559 |         ).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (__tests__/components/editor/ChatBox.test.tsx:556:20)

Summary of all failing tests
FAIL __tests__/api/video/generate.test.ts
  ● POST /api/video/generate › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:115:21)

  ● POST /api/video/generate › Rate Limiting › should return 429 when rate limit exceeded

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:140:21)

  ● POST /api/video/generate › Rate Limiting › should apply expensive rate limit for video generation

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:162:21)

  ● POST /api/video/generate › Input Validation › should return 400 when validation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:189:21)

  ● POST /api/video/generate › Input Validation › should validate all required fields

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:211:21)

  ● POST /api/video/generate › Project Ownership Verification › should return 404 when project not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:238:21)

  ● POST /api/video/generate › Project Ownership Verification › should return 403 when user does not own project

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:260:21)

  ● POST /api/video/generate › Video Generation - Google Veo › should generate video with Veo for Google models

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:283:21)

  ● POST /api/video/generate › Video Generation - Google Veo › should pass all Veo parameters correctly

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:318:21)

  ● POST /api/video/generate › Video Generation - FAL Models › should use FAL for Seedance model

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:367:21)

  ● POST /api/video/generate › Video Generation - FAL Models › should use FAL for MiniMax model

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:395:21)

  ● POST /api/video/generate › Image-to-Video Generation › should generate video from image asset

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:439:21)

  ● POST /api/video/generate › Image-to-Video Generation › should return 404 when image asset not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:476:21)

  ● POST /api/video/generate › Error Handling › should return 500 when video generation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:500:21)

  ● POST /api/video/generate › Error Handling › should handle malformed JSON body

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:519:21)

  ● POST /api/video/generate › Response Format › should return operationName and status

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/generate.test.ts:539:21)

FAIL __tests__/api/assets/sign.test.ts
  ● GET /api/assets/sign › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:54:21)

  ● GET /api/assets/sign › Input Validation › should return 400 when neither storageUrl nor assetId provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:69:21)

  ● GET /api/assets/sign › Input Validation › should return 400 when storageUrl is invalid

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:80:21)

  ● GET /api/assets/sign › Input Validation › should accept valid supabase:// storage URLs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:91:21)

  ● GET /api/assets/sign › Asset Lookup by assetId › should fetch storageUrl from database when assetId provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:115:21)

  ● GET /api/assets/sign › Asset Lookup by assetId › should return 404 when asset not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:131:21)

  ● GET /api/assets/sign › Asset Lookup by assetId › should return 403 when asset belongs to different user

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:152:21)

  ● GET /api/assets/sign › Asset Authorization by storageUrl › should verify user owns asset by checking folder structure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:165:21)

  ● GET /api/assets/sign › Asset Authorization by storageUrl › should return 403 when storageUrl does not match user

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:176:21)

  ● GET /api/assets/sign › Asset Authorization by storageUrl › should skip folder check when assetId was used for lookup

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:200:21)

  ● GET /api/assets/sign › Signed URL Generation › should create signed URL with default TTL

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:211:21)

  ● GET /api/assets/sign › Signed URL Generation › should create signed URL with custom TTL

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:226:21)

  ● GET /api/assets/sign › Signed URL Generation › should parse storage URL correctly

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:238:21)

  ● GET /api/assets/sign › Signed URL Generation › should return signed URL and expiration

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:258:21)

  ● GET /api/assets/sign › Storage Bucket Handling › should handle different storage buckets

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:283:21)

  ● GET /api/assets/sign › Storage Bucket Handling › should handle paths with multiple slashes

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:292:21)

  ● GET /api/assets/sign › Error Handling › should return 500 when storage signing fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:313:21)

  ● GET /api/assets/sign › Error Handling › should return 500 when database query fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:331:21)

  ● GET /api/assets/sign › Error Handling › should handle unexpected errors gracefully

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:344:21)

  ● GET /api/assets/sign › URL Format Handling › should strip supabase:// protocol

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:359:21)

  ● GET /api/assets/sign › URL Format Handling › should handle URLs with special characters

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:375:21)

  ● GET /api/assets/sign › URL Format Handling › should validate bucket name is not empty

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:386:21)

  ● GET /api/assets/sign › URL Format Handling › should validate path is not empty

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/sign.test.ts:399:21)

FAIL __tests__/api/payments/checkout.test.ts
  ● POST /api/stripe/checkout › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:64:21)

  ● POST /api/stripe/checkout › Authentication › should return 401 when auth error occurs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:81:21)

  ● POST /api/stripe/checkout › User Profile Validation › should return 500 when user profile not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:97:21)

  ● POST /api/stripe/checkout › User Profile Validation › should return 400 when user already has active subscription

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:118:21)

  ● POST /api/stripe/checkout › User Profile Validation › should allow checkout for free tier users

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:143:21)

  ● POST /api/stripe/checkout › User Profile Validation › should allow checkout for users with canceled subscriptions

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:166:21)

  ● POST /api/stripe/checkout › Stripe Customer Creation › should create new Stripe customer when not exists

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:196:21)

  ● POST /api/stripe/checkout › Stripe Customer Creation › should use existing Stripe customer when available

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:227:21)

  ● POST /api/stripe/checkout › Checkout Session Creation › should create checkout session with default price

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:257:21)

  ● POST /api/stripe/checkout › Checkout Session Creation › should create checkout session with custom price

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:290:21)

  ● POST /api/stripe/checkout › Checkout Session Creation › should return 500 when price ID not configured

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:317:21)

  ● POST /api/stripe/checkout › Error Handling › should return 500 when Stripe API fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:343:21)

  ● POST /api/stripe/checkout › Error Handling › should handle malformed JSON body

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:360:21)

  ● POST /api/stripe/checkout › Response Format › should return sessionId and url

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:388:21)

  ● POST /api/stripe/checkout › URL Configuration › should use NEXT_PUBLIC_BASE_URL when available

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:416:21)

  ● POST /api/stripe/checkout › URL Configuration › should fallback to request origin when BASE_URL not set

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/payments/checkout.test.ts:445:21)

FAIL __tests__/lib/api/response.test.ts
  ● API Response Utilities › withErrorHandling › should log errors to console

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Handler error:", Any<Error>

    Number of calls: 0

      378 |       await wrappedHandler();
      379 |
    > 380 |       expect(consoleSpy).toHaveBeenCalledWith('Handler error:', expect.any(Error));
          |                          ^
      381 |       consoleSpy.mockRestore();
      382 |     });
      383 |   });

      at Object.toHaveBeenCalledWith (__tests__/lib/api/response.test.ts:380:26)

FAIL __tests__/api/assets/upload.test.ts
  ● POST /api/assets/upload › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:68:21)

  ● POST /api/assets/upload › Input Validation › should return 400 when no file provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:88:21)

  ● POST /api/assets/upload › Input Validation › should return 400 when no projectId provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:106:21)

  ● POST /api/assets/upload › Input Validation › should return 400 when file exceeds size limit

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:135:21)

  ● POST /api/assets/upload › Input Validation › should return 400 for invalid image MIME type

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:157:21)

  ● POST /api/assets/upload › Input Validation › should accept valid image MIME types

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:189:23)

  ● POST /api/assets/upload › Input Validation › should accept valid video MIME types

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:220:23)

  ● POST /api/assets/upload › Project Authorization › should return 404 when project not found

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:246:21)

  ● POST /api/assets/upload › Project Authorization › should return 404 when user does not own project

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:275:21)

  ● POST /api/assets/upload › Project Authorization › should verify project ownership with user_id

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:302:21)

  ● POST /api/assets/upload › File Upload Success › should upload file and create asset record

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:332:21)

  ● POST /api/assets/upload › File Upload Success › should generate unique filename with UUID

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:369:21)

  ● POST /api/assets/upload › File Upload Success › should organize files in correct folder structure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:401:21)

  ● POST /api/assets/upload › File Upload Success › should return asset information in response

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:432:21)

  ● POST /api/assets/upload › Error Handling › should return 500 when storage upload fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:463:21)

  ● POST /api/assets/upload › Error Handling › should delete uploaded file when database insert fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:498:21)

  ● POST /api/assets/upload › Error Handling › should handle unexpected errors

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:525:21)

  ● POST /api/assets/upload › Activity History › should log upload to activity history

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/assets/upload.test.ts:556:21)

FAIL __tests__/api/projects/create.test.ts
  ● POST /api/projects › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:71:21)

  ● POST /api/projects › Authentication › should return 401 when auth error occurs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:88:21)

  ● POST /api/projects › Success Cases › should create a project with custom title

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:108:21)

  ● POST /api/projects › Success Cases › should create a project with default title when no title provided

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:135:21)

  ● POST /api/projects › Success Cases › should create a project with empty timeline state

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:157:21)

  ● POST /api/projects › Error Handling › should return 500 when database insert fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:175:21)

  ● POST /api/projects › Error Handling › should return 500 when unexpected error occurs

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:193:21)

  ● POST /api/projects › Error Handling › should handle malformed JSON body

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:208:21)

  ● POST /api/projects › Data Validation › should accept empty title and use default

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:228:21)

  ● POST /api/projects › Data Validation › should trim whitespace from title

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:251:21)

  ● POST /api/projects › Data Validation › should accept very long titles

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:270:21)

  ● POST /api/projects › Response Format › should return complete project object

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:292:21)

  ● POST /api/projects › Response Format › should return correct content-type header

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:313:21)

  ● POST /api/projects › Database Interactions › should call database methods in correct order

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:330:21)

  ● POST /api/projects › Database Interactions › should use select().single() chain

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/projects/create.test.ts:348:21)

FAIL __tests__/api/video/status.test.ts
  ● GET /api/video/status › Authentication › should return 401 when user is not authenticated

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:91:21)

  ● GET /api/video/status › Input Validation › should return 400 when operationName is missing

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:104:21)

  ● GET /api/video/status › Input Validation › should return 400 when projectId is missing

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:115:21)

  ● GET /api/video/status › FAL Video Status › should check FAL operation status

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:134:21)

  ● GET /api/video/status › FAL Video Status › should handle completed FAL video generation

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:178:21)

  ● GET /api/video/status › FAL Video Status › should return error when FAL video generation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:200:21)

  ● GET /api/video/status › FAL Video Status › should validate FAL operation name format

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:215:21)

  ● GET /api/video/status › Veo Video Status › should check Veo operation status

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:234:21)

  ● GET /api/video/status › Veo Video Status › should handle completed Veo video with base64 data

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:275:21)

  ● GET /api/video/status › Veo Video Status › should download Veo video from GCS URI

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:331:21)

  ● GET /api/video/status › Veo Video Status › should return error when Veo operation fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:354:21)

  ● GET /api/video/status › Storage and Database › should upload video to storage and create asset record

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:392:21)

  ● GET /api/video/status › Storage and Database › should clean up storage on database insert failure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:445:21)

  ● GET /api/video/status › Storage and Database › should create activity history entry on success

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:479:21)

  ● GET /api/video/status › Error Handling › should return 500 when status check fails

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:501:21)

  ● GET /api/video/status › Error Handling › should handle storage upload failure

    TypeError: Cannot set property url of #<NextRequest> which has only a getter

      13 |   globalThis.Request = class Request {
      14 |     constructor(input, init) {
    > 15 |       this.url = typeof input === 'string' ? input : input.url
         |               ^
      16 |       this.method = init?.method || 'GET'
      17 |       this.headers = new Map(Object.entries(init?.headers || {}))
      18 |       this.body = init?.body

      at new Request1 (jest.setup.js:15:15)
      at new NextRequest (node_modules/next/src/server/web/spec-extension/request.ts:39:10)
      at Object.<anonymous> (__tests__/api/video/status.test.ts:533:21)

FAIL __tests__/components/generation/VideoQueueItem.test.tsx
  ● VideoQueueItem › Completed State › should show error state on video error

    TestingLibraryElementError: Unable to find an element with the text: Failed to load video. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"group relative flex flex-col rounded-lg border border-neutral-200 bg-white shadow-sm overflow-hidden"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"relative aspect-video bg-neutral-100"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"absolute inset-0 flex items-center justify-center bg-neutral-100 z-10"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-center"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mx-auto h-8 w-8 animate-spin rounded-full border-4 border-neutral-300 border-t-blue-600"[39m
                [36m/>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-xs text-neutral-600"[39m
                [36m>[39m
                  [0mLoading video...[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<video[39m
              [33mclass[39m=[32m"h-full w-full object-contain bg-black"[39m
              [33mcontrols[39m=[32m""[39m
              [33mplaysinline[39m=[32m""[39m
              [33mposter[39m=[32m"https://example.com/thumb.jpg"[39m
              [33mpreload[39m=[32m"auto"[39m
              [33msrc[39m=[32m"https://example.com/video.mp4"[39m
            [36m>[39m
              [36m<track[39m
                [33mkind[39m=[32m"captions"[39m
              [36m/>[39m
              [0mYour browser does not support the video tag.[0m
            [36m</video>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"p-3"[39m
          [36m>[39m
            [36m<p[39m
              [33mclass[39m=[32m"text-xs text-neutral-700 line-clamp-2 mb-2"[39m
            [36m>[39m
              [0mA beautiful sunset over the ocean[0m
            [36m</p>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium bg-green-100 text-green-700"[39m
              [36m>[39m
                [0mCompleted[0m
              [36m</span>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"absolute right-2 top-2 z-10 rounded-md bg-black/50 p-1.5 text-white opacity-0 transition-opacity hover:bg-black/70 group-hover:opacity-100"[39m
            [33mtitle[39m=[32m"Remove from queue"[39m
          [36m>[39m
            [36m<svg[39m
              [33mclass[39m=[32m"h-4 w-4"[39m
              [33mfill[39m=[32m"none"[39m
              [33mstroke[39m=[32m"currentColor"[39m
              [33mviewBox[39m=[32m"0 0 24 24"[39m
            [36m>[39m
              [36m<path[39m
                [33md[39m=[32m"M6 18L18 6M6 6l12 12"[39m
                [33mstroke-linecap[39m=[32m"round"[39m
                [33mstroke-linejoin[39m=[32m"round"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
            [36m</svg>[39m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      173 |       fireEvent.error(video!);
      174 |
    > 175 |       expect(screen.getByText('Failed to load video')).toBeInTheDocument();
          |                     ^
      176 |     });
      177 |
      178 |     it('should report video load errors with browserLogger', async () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (__tests__/components/generation/VideoQueueItem.test.tsx:175:21)

  ● VideoQueueItem › Edge Cases › should handle empty prompt

    TestingLibraryElementError: Found multiple elements with the text: Queued

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<p[39m
      [33mclass[39m=[32m"mt-2 text-xs text-neutral-600"[39m
    [36m>[39m
      [0mQueued[0m
    [36m</p>[39m

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mclass[39m=[32m"inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium bg-neutral-100 text-neutral-700"[39m
    [36m>[39m
      [0mQueued[0m
    [36m</span>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"group relative flex flex-col rounded-lg border border-neutral-200 bg-white shadow-sm overflow-hidden"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"relative aspect-video bg-neutral-100"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex h-full w-full items-center justify-center"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-center"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mx-auto h-8 w-8 rounded-full border-4 border-neutral-300 border-t-neutral-600"[39m
                [36m/>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-xs text-neutral-600"[39m
                [36m>[39m
                  [0mQueued[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"p-3"[39m
          [36m>[39m
            [36m<p[39m
              [33mclass[39m=[32m"text-xs text-neutral-700 line-clamp-2 mb-2"[39m
            [36m/>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium bg-neutral-100 text-neutral-700"[39m
              [36m>[39m
                [0mQueued[0m
              [36m</span>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"absolute right-2 top-2 z-10 rounded-md bg-black/50 p-1.5 text-white opacity-0 transition-opacity hover:bg-black/70 group-hover:opacity-100"[39m
            [33mtitle[39m=[32m"Remove from queue"[39m
          [36m>[39m
            [36m<svg[39m
              [33mclass[39m=[32m"h-4 w-4"[39m
              [33mfill[39m=[32m"none"[39m
              [33mstroke[39m=[32m"currentColor"[39m
              [33mviewBox[39m=[32m"0 0 24 24"[39m
            [36m>[39m
              [36m<path[39m
                [33md[39m=[32m"M6 18L18 6M6 6l12 12"[39m
                [33mstroke-linecap[39m=[32m"round"[39m
                [33mstroke-linejoin[39m=[32m"round"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
            [36m</svg>[39m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      323 |     it('should handle empty prompt', () => {
      324 |       render(<VideoQueueItem {...baseProps} prompt="" status="queued" />);
    > 325 |       expect(screen.getByText('Queued')).toBeInTheDocument();
          |                     ^
      326 |     });
      327 |
      328 |     it('should handle very long error messages', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (__tests__/components/generation/VideoQueueItem.test.tsx:325:21)

FAIL __tests__/api/payments/webhook.test.ts
  ● Test suite failed to run

    ReferenceError: Cannot access 'stripeMocks' before initialization

      19 |
      20 | jest.mock('@/lib/stripe', () => {
    > 21 |   stripeMocks.constructEvent = jest.fn();
         |   ^
      22 |   stripeMocks.retrieveSubscription = jest.fn();
      23 |
      24 |   return {

      at stripeMocks (__tests__/api/payments/webhook.test.ts:21:3)
      at Object.<anonymous> (app/api/stripe/webhook/route.ts:23:17)
      at Object.<anonymous> (__tests__/api/payments/webhook.test.ts:34:16)

FAIL __tests__/components/PreviewPlayer.test.tsx
  ● Test suite failed to run

    TypeError: Cannot destructure property 'MAX_HISTORY' of '_constants.EDITOR_CONSTANTS' as it is undefined.

      27 | import { EDITOR_CONSTANTS, CLIP_CONSTANTS, ZOOM_CONSTANTS } from '@/lib/constants';
      28 |
    > 29 | const { MAX_HISTORY, HISTORY_DEBOUNCE_MS } = EDITOR_CONSTANTS;
         |         ^
      30 | const { MIN_CLIP_DURATION } = CLIP_CONSTANTS;
      31 | const { MIN_ZOOM, MAX_ZOOM, DEFAULT_ZOOM } = ZOOM_CONSTANTS;
      32 |

      at Object.MAX_HISTORY (state/useEditorStore.ts:29:9)
      at Object.<anonymous> (components/PreviewPlayer.tsx:29:25)
      at Object.<anonymous> (__tests__/components/PreviewPlayer.test.tsx:28:63)

FAIL k6/video-generation.test.js
  ● Test suite failed to run

    Cannot find module 'k6/http' from 'k6/video-generation.test.js'

      37 |     http_req_failed: ['rate<0.1'],     // Error rate should be below 10%
      38 |     'rate_limit_hits': ['count<50'],   // Should not hit rate limits too often
    > 39 |   },
         |     ^
      40 | };
      41 |
      42 | // Base URL - override with environment variable

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (k6/video-generation.test.js:39:54)

FAIL __tests__/components/UserMenu.test.tsx
  ● Test suite failed to run

    ReferenceError: Cannot access 'mockToast' before initialization

      43 | jest.mock('react-hot-toast', () => ({
      44 |   __esModule: true,
    > 45 |   default: mockToast,
         |            ^
      46 | }));
      47 |
      48 | // Mock browserLogger

      at mockToast (__tests__/components/UserMenu.test.tsx:45:12)
      at Object.<anonymous> (components/UserMenu.tsx:17:63)
      at Object.<anonymous> (__tests__/components/UserMenu.test.tsx:38:58)

FAIL k6/audio-generation.test.js
  ● Test suite failed to run

    Cannot find module 'k6/http' from 'k6/audio-generation.test.js'

      29 |     http_req_duration: ['p(95)<10000'], // 95% under 10s
      30 |     http_req_failed: ['rate<0.15'],     // Error rate under 15%
    > 31 |   },
         |     ^
      32 | };
      33 |
      34 | const BASE_URL = __ENV.BASE_URL || 'http://localhost:3000';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (k6/audio-generation.test.js:31:54)

FAIL k6/image-generation.test.js
  ● Test suite failed to run

    Cannot find module 'k6/http' from 'k6/image-generation.test.js'

      29 |
      30 | const BASE_URL = __ENV.BASE_URL || 'http://localhost:3000';
    > 31 | const TEST_EMAIL = __ENV.TEST_EMAIL || 'david@dreamreal.ai';
         |                                                      ^
      32 | const TEST_PASSWORD = __ENV.TEST_PASSWORD || 'sc3p4sses';
      33 |
      34 | export function setup() {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (k6/image-generation.test.js:31:54)

FAIL __tests__/components/HorizontalTimeline.test.tsx
  ● Test suite failed to run

    TypeError: Cannot destructure property 'MAX_HISTORY' of '_constants.EDITOR_CONSTANTS' as it is undefined.

      27 | import { EDITOR_CONSTANTS, CLIP_CONSTANTS, ZOOM_CONSTANTS } from '@/lib/constants';
      28 |
    > 29 | const { MAX_HISTORY, HISTORY_DEBOUNCE_MS } = EDITOR_CONSTANTS;
         |         ^
      30 | const { MIN_CLIP_DURATION } = CLIP_CONSTANTS;
      31 | const { MIN_ZOOM, MAX_ZOOM, DEFAULT_ZOOM } = ZOOM_CONSTANTS;
      32 |

      at Object.MAX_HISTORY (state/useEditorStore.ts:29:9)
      at Object.<anonymous> (components/HorizontalTimeline.tsx:15:25)
      at Object.<anonymous> (__tests__/components/HorizontalTimeline.test.tsx:11:68)

FAIL __tests__/components/ActivityHistory.test.tsx
  ● Test suite failed to run

    ReferenceError: Cannot access 'mockToast' before initialization

      22 | jest.mock('react-hot-toast', () => ({
      23 |   __esModule: true,
    > 24 |   default: mockToast,
         |            ^
      25 | }));
      26 |
      27 | // Mock fetch

      at mockToast (__tests__/components/ActivityHistory.test.tsx:24:12)
      at Object.<anonymous> (components/ActivityHistory.tsx:15:63)
      at Object.<anonymous> (__tests__/components/ActivityHistory.test.tsx:19:26)

FAIL __tests__/state/useEditorStore.test.ts
  ● Test suite failed to run

    TypeError: Cannot destructure property 'MAX_HISTORY' of '_constants.EDITOR_CONSTANTS' as it is undefined.

      27 | import { EDITOR_CONSTANTS, CLIP_CONSTANTS, ZOOM_CONSTANTS } from '@/lib/constants';
      28 |
    > 29 | const { MAX_HISTORY, HISTORY_DEBOUNCE_MS } = EDITOR_CONSTANTS;
         |         ^
      30 | const { MIN_CLIP_DURATION } = CLIP_CONSTANTS;
      31 | const { MIN_ZOOM, MAX_ZOOM, DEFAULT_ZOOM } = ZOOM_CONSTANTS;
      32 |

      at Object.MAX_HISTORY (state/useEditorStore.ts:29:9)
      at Object.<anonymous> (__tests__/state/useEditorStore.test.ts:6:25)

FAIL __tests__/components/editor/ChatBox.test.tsx
  ● ChatBox › File Attachments › should create blob URLs when files are attached

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {}

    Number of calls: 0

      407 |       });
      408 |
    > 409 |       expect(mockCreateObjectURL).toHaveBeenCalledWith(testFile);
          |                                   ^
      410 |       await waitFor(() => {
      411 |         expect(screen.getByText('test.png')).toBeInTheDocument();
      412 |       });

      at Object.toHaveBeenCalledWith (__tests__/components/editor/ChatBox.test.tsx:409:35)

  ● ChatBox › Loading States › should show loading indicator when sending message

    Found multiple elements with the text: (content, element)=>{
                        return element?.className.includes('animate-bounce') ?? false;
                    }

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
      [33mstyle[39m=[32m"animation-delay: 0ms;"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
      [33mstyle[39m=[32m"animation-delay: 150ms;"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
      [33mstyle[39m=[32m"animation-delay: 300ms;"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex h-full flex-col border-l border-neutral-200 bg-white"[39m
        [36m>[39m
          [36m<input[39m
            [33maccept[39m=[32m"image/*,.pdf,.doc,.docx,.txt"[39m
            [33mclass[39m=[32m"hidden"[39m
            [33mmultiple[39m=[32m""[39m
            [33mtype[39m=[32m"file"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center justify-between border-b border-neutral-200 px-6 py-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-3"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-blue-500 to-purple-600"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4 text-white"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-sm font-semibold text-neutral-900"[39m
              [36m>[39m
                [0mDreamReal Assistant[0m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-b border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<select[39m
                [33mclass[39m=[32m"flex-1 rounded-lg border border-neutral-300 bg-white px-3 py-2 text-xs font-medium text-neutral-700 focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
              [36m>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-flash-latest"[39m
                [36m>[39m
                  [0mGemini Flash[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-2.5-pro"[39m
                [36m>[39m
                  [0mGemini Pro[0m
                [36m</option>[39m
              [36m</select>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Clear chat history"[39m
                [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50 hover:text-red-600 transition-colors"[39m
                [33mtitle[39m=[32m"Clear chat history"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 overflow-y-auto p-4 space-y-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-end"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-gradient-to-br from-blue-600 to-blue-700 text-white"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mHello, can you help me?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-blue-200"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-start"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-neutral-100 text-neutral-900"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mOf course! How can I assist you today?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-neutral-500"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex justify-start"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"rounded-xl bg-neutral-100 px-4 py-2.5"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center gap-2"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
                    [33mstyle[39m=[32m"animation-delay: 0ms;"[39m
                  [36m/>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
                    [33mstyle[39m=[32m"animation-delay: 150ms;"[39m
                  [36m/>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"h-2 w-2 animate-bounce rounded-full bg-neutral-400"[39m
                    [33mstyle[39m=[32m"animation-delay: 300ms;"[39m
                  [36m/>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div />[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-t border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-2"[39m
            [36m>[39m
              [36m<textarea[39m
                [33mclass[39m=[32m"flex-1 resize-none rounded-lg border border-neutral-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
                [33mplaceholder[39m=[32m"Ask about your video project..."[39m
                [33mrows[39m=[32m"2"[39m
              [36m/>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col gap-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Send message"[39m
                  [33mclass[39m=[32m"rounded-lg bg-gradient-to-br from-blue-600 to-blue-700 p-2 text-white hover:from-blue-700 hover:to-blue-800 disabled:opacity-50"[39m
                  [33mdisabled[39m=[32m""[39m
                  [33mtitle[39m=[32m"Send message"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M12 19l9 2-9-18-9 18 9-2zm0 0v-8"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Attach files"[39m
                  [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50"[39m
                  [33mtitle[39m=[32m"Attach files"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      519 |
      520 |       // Should show loading dots
    > 521 |       await waitFor(
          |                    ^
      522 |         () => {
      523 |           const loadingDots = screen.getByText(
      524 |             (content, element) => {

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (__tests__/components/editor/ChatBox.test.tsx:521:20)

  ● ChatBox › Error Handling › should display error message when API fails

    Unable to find an element with the text: Sorry, I encountered an error processing your request.. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex h-full flex-col border-l border-neutral-200 bg-white"[39m
        [36m>[39m
          [36m<input[39m
            [33maccept[39m=[32m"image/*,.pdf,.doc,.docx,.txt"[39m
            [33mclass[39m=[32m"hidden"[39m
            [33mmultiple[39m=[32m""[39m
            [33mtype[39m=[32m"file"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center justify-between border-b border-neutral-200 px-6 py-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-3"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-blue-500 to-purple-600"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4 text-white"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-sm font-semibold text-neutral-900"[39m
              [36m>[39m
                [0mDreamReal Assistant[0m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-b border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-2"[39m
            [36m>[39m
              [36m<select[39m
                [33mclass[39m=[32m"flex-1 rounded-lg border border-neutral-300 bg-white px-3 py-2 text-xs font-medium text-neutral-700 focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
              [36m>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-flash-latest"[39m
                [36m>[39m
                  [0mGemini Flash[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"gemini-2.5-pro"[39m
                [36m>[39m
                  [0mGemini Pro[0m
                [36m</option>[39m
              [36m</select>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Clear chat history"[39m
                [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50 hover:text-red-600 transition-colors"[39m
                [33mtitle[39m=[32m"Clear chat history"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"h-4 w-4"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 overflow-y-auto p-4 space-y-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-end"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-gradient-to-br from-blue-600 to-blue-700 text-white"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mHello, can you help me?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-blue-200"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-3 justify-start"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"max-w-[85%] rounded-xl px-4 py-2.5 bg-neutral-100 text-neutral-900"[39m
              [36m>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-sm leading-relaxed"[39m
                [36m>[39m
                  [0mOf course! How can I assist you today?[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-1 text-xs text-neutral-500"[39m
                [36m>[39m
                  [0m05:00 AM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div />[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"border-t border-neutral-200 p-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex gap-2"[39m
            [36m>[39m
              [36m<textarea[39m
                [33mclass[39m=[32m"flex-1 resize-none rounded-lg border border-neutral-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500/20"[39m
                [33mplaceholder[39m=[32m"Ask about your video project..."[39m
                [33mrows[39m=[32m"2"[39m
              [36m/>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col gap-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Send message"[39m
                  [33mclass[39m=[32m"rounded-lg bg-gradient-to-br from-blue-600 to-blue-700 p-2 text-white hover:from-blue-700 hover:to-blue-800 disabled:opacity-50"[39m
                  [33mdisabled[39m=[32m""[39m
                  [33mtitle[39m=[32m"Send message"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M12 19l9 2-9-18-9 18 9-2zm0 0v-8"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Attach files"[39m
                  [33mclass[39m=[32m"rounded-lg border border-neutral-300 bg-white p-2 text-neutral-600 hover:bg-neutral-50"[39m
                  [33mtitle[39m=[32m"Attach files"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mclass[39m=[32m"h-4 w-4"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      554 |       await user.click(sendButton);
      555 |
    > 556 |       await waitFor(() => {
          |                    ^
      557 |         expect(
      558 |           screen.getByText('Sorry, I encountered an error processing your request.')
      559 |         ).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (__tests__/components/editor/ChatBox.test.tsx:556:20)


Test Suites: 18 failed, 16 passed, 34 total
Tests:       110 failed, 2 skipped, 511 passed, 623 total
Snapshots:   2 passed, 2 total
Time:        5.668 s
Ran all test suites.
