      // Original text-based approach
      const totalInputLength = adDescriptionText.length + styleText.length;
      const useAsync = totalInputLength > 3000; // Use async for larger inputs
      
      if (useAsync) {
      console.log('Using async generation for large input');
      // Start async job
      const startResponse = await fetch('/.netlify/functions/generate-prompts-async', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          adDescription: adDescriptionText,
          styleBlock: styleText,
          step: 'initial'
        })
      });
      
      if (!startResponse.ok) {
        const error = await startResponse.json();
        throw new Error(error.message || error.error || 'Failed to start generation');
      }
      
      const { jobId } = await startResponse.json();
      console.log('Job started:', jobId);
      
      // Poll for results
      let attempts = 0;
      const maxAttempts = 60; // 3 minutes max
      
      while (attempts < maxAttempts) {
        await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds
        
        const statusResponse = await fetch(`/.netlify/functions/generate-prompts-async?jobId=${jobId}`);
        if (!statusResponse.ok) {
          throw new Error('Failed to check job status');
        }
        
        const jobData = await statusResponse.json();
        console.log('Job status:', jobData.status);
        
        if (jobData.status === 'completed') {
          initialData = jobData.result;
          break;
        } else if (jobData.status === 'failed') {
          throw new Error(jobData.error || 'Job failed');
        }
        
        attempts++;
        
        // Update message every 10 attempts
        if (attempts % 10 === 0) {
          thinkingMsg.textContent = `Still working on your storyboard... (${Math.round(attempts * 3 / 60)} minutes elapsed)`;
        }
      }
      
      if (!initialData) {
        throw new Error('Generation timed out. Please try with a shorter brief.');
      }
      
    } else {
      // Use synchronous endpoint for smaller inputs
      const response1 = await fetch('/.netlify/functions/generate-prompts-simple', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          adDescription: adDescriptionText,
          styleBlock: styleText,
          step: 'initial'
        })
      });
      
      if (!response1.ok) {
        const data = await response1.json();
        throw new Error(data.message || data.error || 'Failed to generate initial prompts');
      }
      
      initialData = await response1.json();
    }
    }
