openapi: 3.0.3
info:
  title: Non-Linear Video Editor API
  description: |
    RESTful API for the Non-Linear Video Editor platform. This API provides endpoints for:
    - Project management (create, update, delete projects)
    - Video generation using AI models (Google Veo, FAL.ai Seedance, MiniMax)
    - Image generation using AI models (Google Imagen, Flux)
    - Audio generation (ElevenLabs, Suno)
    - Asset management (upload, storage, retrieval)
    - User authentication and authorization
    - Admin operations

    ## Authentication
    All API endpoints (except health check) require authentication via Supabase session cookies.
    The session cookie (`supabase-auth-token`) is automatically set after successful login.

    ## Rate Limiting
    The API implements tiered rate limiting to prevent abuse:
    - Tier 1 (Standard): 100 requests/minute for data retrieval
    - Tier 2 (Resource Creation): 10 requests/minute for AI generation and project creation
    - Tier 3 (Heavy Operations): 5 requests/minute for exports and batch operations

    Rate limit information is included in response headers:
    - `X-RateLimit-Limit`: Maximum requests per window
    - `X-RateLimit-Remaining`: Remaining requests in current window
    - `X-RateLimit-Reset`: Time when limit resets (ISO 8601)

    ## Versioning
    The API uses path-based versioning (e.g., `/api/v1/projects`).
    Current stable version: v1

    Version information is included in response headers:
    - `X-API-Version`: API version used for this request
    - `X-API-Deprecation-Warning`: Deprecation warning (if applicable)
    - `Sunset`: Date when deprecated version will be removed (if applicable)

    ## Error Handling
    All errors follow a consistent format:
    ```json
    {
      "error": "Error message",
      "field": "fieldName",
      "details": {}
    }
    ```

    Common HTTP status codes:
    - 200: Success
    - 400: Bad Request (validation error)
    - 401: Unauthorized (authentication required)
    - 403: Forbidden (insufficient permissions)
    - 404: Not Found
    - 409: Conflict (resource already exists)
    - 413: Payload Too Large (request body size limit exceeded)
    - 429: Too Many Requests (rate limit exceeded)
    - 500: Internal Server Error
    - 503: Service Unavailable (external service error)

  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.example.com
    description: Production server
  - url: http://localhost:3000
    description: Development server

tags:
  - name: Health
    description: Health check and system status
  - name: Projects
    description: Project management operations
  - name: Video
    description: Video generation and processing
  - name: Image
    description: Image generation
  - name: Audio
    description: Audio generation
  - name: Assets
    description: Asset management (upload, storage)
  - name: Export
    description: Project export operations
  - name: Admin
    description: Admin-only operations
  - name: Auth
    description: Authentication operations

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: supabase-auth-token
      description: Supabase session cookie authentication

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        field:
          type: string
          description: Field that caused the error (if applicable)
        details:
          type: object
          description: Additional error details
      required:
        - error

    UUID:
      type: string
      format: uuid
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
      example: '123e4567-e89b-12d3-a456-426614174000'

    Timestamp:
      type: string
      format: date-time
      example: '2025-10-23T12:00:00.000Z'

    RateLimitError:
      type: object
      properties:
        error:
          type: string
          example: Rate limit exceeded
        limit:
          type: integer
          description: Maximum requests allowed
        remaining:
          type: integer
          description: Remaining requests
        resetAt:
          type: integer
          description: Unix timestamp when limit resets
        retryAfter:
          type: integer
          description: Seconds until retry allowed
      required:
        - error
        - limit
        - remaining
        - resetAt
        - retryAfter

    Project:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        title:
          type: string
          minLength: 1
          maxLength: 200
          example: 'My Video Project'
        user_id:
          $ref: '#/components/schemas/UUID'
        timeline_state_jsonb:
          type: object
          description: Timeline state (JSON)
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - title
        - user_id
        - timeline_state_jsonb
        - created_at
        - updated_at

    VideoGenerationRequest:
      type: object
      properties:
        prompt:
          type: string
          minLength: 3
          maxLength: 1000
          description: Text description of the video to generate
          example: 'A serene lake at sunset with mountains in the background'
        projectId:
          $ref: '#/components/schemas/UUID'
        model:
          type: string
          enum:
            - veo-3.1-generate-preview
            - veo-3.1-fast-generate-preview
            - veo-2.0-generate-001
            - seedance-1.0-pro
            - minimax-hailuo-02-pro
          example: 'veo-3.1-generate-preview'
        aspectRatio:
          type: string
          enum: ['16:9', '9:16', '1:1', '4:3', '3:4']
          example: '16:9'
        duration:
          type: integer
          enum: [4, 5, 6, 8, 10]
          description: Video duration in seconds
          example: 5
        resolution:
          type: string
          enum: ['480p', '720p', '1080p']
          example: '1080p'
        negativePrompt:
          type: string
          maxLength: 1000
          description: Text describing what to avoid in the video
        personGeneration:
          type: string
          enum: ['dont_allow', 'allow_adult', 'allow_all']
        enhancePrompt:
          type: boolean
          description: Whether to enhance the prompt with AI optimization
        generateAudio:
          type: boolean
          description: Whether to generate audio for the video (Veo only)
        seed:
          type: integer
          minimum: 0
          maximum: 2147483647
          description: Random seed for reproducible generation
        sampleCount:
          type: integer
          minimum: 1
          maximum: 4
          description: Number of video variations to generate
        compressionQuality:
          type: integer
          minimum: 0
          maximum: 100
          description: Video compression quality (Veo only)
        imageAssetId:
          $ref: '#/components/schemas/UUID'
          description: UUID of an image asset to use as the first frame (image-to-video)
      required:
        - prompt
        - projectId
        - model

    VideoGenerationResponse:
      type: object
      properties:
        operationName:
          type: string
          description: Unique operation identifier for polling status
          example: 'projects/123/locations/us-central1/operations/456'
        status:
          type: string
          enum: ['processing']
          example: 'processing'
        message:
          type: string
          example: 'Video generation started. Use the operation name to check status.'
      required:
        - operationName
        - status
        - message

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: ['healthy', 'unhealthy']
          example: 'healthy'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        uptime:
          type: number
          description: Process uptime in seconds
          example: 3600.5
        environment:
          type: string
          example: 'production'
        version:
          type: string
          example: '0.1.0'
      required:
        - status
        - timestamp

  responses:
    BadRequest:
      description: Bad Request - Invalid input parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Invalid request parameters'
            field: 'projectId'

    Unauthorized:
      description: Unauthorized - Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Unauthorized'

    Forbidden:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Access denied'

    NotFound:
      description: Not Found - Resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Resource not found'

    Conflict:
      description: Conflict - Resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Resource already exists'

    RateLimitExceeded:
      description: Too Many Requests - Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RateLimitError'
      headers:
        X-RateLimit-Limit:
          description: Request limit per window
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: Remaining requests in window
          schema:
            type: integer
        X-RateLimit-Reset:
          description: Time when limit resets (ISO 8601)
          schema:
            type: string
            format: date-time
        Retry-After:
          description: Seconds until retry allowed
          schema:
            type: integer

    PayloadTooLarge:
      description: Payload Too Large - Request body size limit exceeded
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 'Request body too large'
              maxSize:
                type: string
                example: '100KB'
              actualSize:
                type: string
                example: '150KB'

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Internal server error'

    ServiceUnavailable:
      description: Service Unavailable - External service error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Service temporarily unavailable'

paths:
  /api/health:
    get:
      tags:
        - Health
      summary: Health check
      description: Check API health status and system information
      operationId: getHealth
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v1/projects:
    post:
      tags:
        - Projects
      summary: Create a new project
      description: |
        Creates a new video editing project associated with the authenticated user.
        Projects serve as containers for assets, timelines, and editing work.
      operationId: createProject
      security:
        - cookieAuth: []
      requestBody:
        description: Project creation parameters
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 200
                  description: Project title (defaults to 'Untitled Project' if not provided)
                  example: 'My Video Project'
      responses:
        '200':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/projects/{projectId}:
    delete:
      tags:
        - Projects
      summary: Delete a project
      description: |
        Deletes a project and all associated resources.
        Cascading delete is handled by database constraints.
      operationId: deleteProject
      security:
        - cookieAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          description: Project UUID
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/video/generate:
    post:
      tags:
        - Video
      summary: Generate a video using AI
      description: |
        Generate a video from a text prompt using AI models (Google Veo, FAL.ai Seedance, or MiniMax).
        Supports both text-to-video and image-to-video generation with multiple AI providers.
        The provider is automatically selected based on the specified model.

        ## Models
        - `veo-3.1-generate-preview`: Google Veo 3.1 with audio support
        - `veo-3.1-fast-generate-preview`: Google Veo 3.1 fast variant with audio support
        - `veo-2.0-generate-001`: Google Veo 2.0 (no audio support)
        - `seedance-1.0-pro`: FAL.ai Seedance model
        - `minimax-hailuo-02-pro`: MiniMax Hailuo model

        ## Rate Limiting
        This endpoint is rate-limited to 10 requests per minute (Tier 2 - Resource Creation).
      operationId: generateVideo
      security:
        - cookieAuth: []
      requestBody:
        description: Video generation parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoGenerationRequest'
      responses:
        '200':
          description: Video generation started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGenerationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

security:
  - cookieAuth: []
